@using GShock.BL
@using GShock.API.Data

@page "/gshockMain"
@inject IHandleState handleService

<h3>GshockMain</h3>

<button class="btn btn-primary" @onclick="(async () => { GShock(); })">Turn on</button>

<p> @display</p>

<button class="btn btn-primary" @onclick="() => { ButtonClicked(new ButtonA(handleService)); }">A</button>
<button class="btn btn-primary" @onclick="() => { ButtonClicked(new ButtonB(handleService)); }">B</button>
<button class="btn btn-primary" @onclick="() => { ButtonClicked(new ButtonC(handleService)); }">C</button>
<button class="btn btn-primary" @onclick="() => { ButtonClicked(new ButtonS(handleService)); }">S</button>

@code {
    public string display = "hello world";
    public bool isClicked = false;

    private void ButtonClicked(IClickButton clickButton)
    {
        var response = clickButton.Execute();
        display = response.ShowString;
        StateHasChanged();

    }

    private void ButtonA()
    {
        var response = handleService.ButtonA();
        display = response.ShowString;
        StateHasChanged();
    }


    private void ButtonB()
    {
        var response = handleService.ButtonB();
        display = response.ShowString;
        StateHasChanged();
    }

    private void ButtonC()
    {
        var response = handleService.ButtonC();
        display = response.ShowString;
        StateHasChanged();
    }

    async Task GShock()
    {
        while(true)
        {
            await Task.Delay(1000);
            var response = handleService.Refresh(1);
            display = response.ShowString;

            StateHasChanged();
        }
    }
}
